// <auto-generated />
using ChronosApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChronosApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240907205244_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChronosApi.Models.Corporacao", b =>
                {
                    b.Property<int>("idCorporacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCorporacao"));

                    b.Property<string>("cnpjCorporacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descricaoCorporacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emailCorporacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idCorporacaoEndereco")
                        .HasColumnType("int");

                    b.Property<string>("nomeCorporacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numeroCorporacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tipoCorporacao")
                        .HasColumnType("int");

                    b.HasKey("idCorporacao");

                    b.ToTable("TB_CORPORACAO");

                    b.HasData(
                        new
                        {
                            idCorporacao = 1,
                            cnpjCorporacao = "12.345.678/0001-99",
                            descricaoCorporacao = "Exemplo de corporação",
                            emailCorporacao = "contato@exemplo.com",
                            idCorporacaoEndereco = 1,
                            nomeCorporacao = "Corporação Exemplo",
                            numeroCorporacao = "12345678",
                            tipoCorporacao = 0
                        });
                });

            modelBuilder.Entity("ChronosApi.Models.Egresso", b =>
                {
                    b.Property<int>("idEgresso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idEgresso"));

                    b.Property<string>("cpfEgresso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeEgresso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numeroEgresso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tipoPessoaEgresso")
                        .HasColumnType("int");

                    b.HasKey("idEgresso");

                    b.ToTable("TB_EGRESSO");

                    b.HasData(
                        new
                        {
                            idEgresso = 1,
                            cpfEgresso = "222",
                            email = "ops.gmail",
                            nomeEgresso = "Pedro",
                            numeroEgresso = "8922",
                            tipoPessoaEgresso = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
